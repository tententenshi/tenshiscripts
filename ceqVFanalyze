#! /usr/bin/env perl

use strict;
use FindBin;
use POSIX;
use Math::Complex;

require $FindBin::RealBin . "/ceqAnalyzeCommon.pm";


my $cmd = `basename $0`;
chomp $cmd;

sub Usage {
	print "usage: $cmd fr0 q fr1 Fs\n";
	print "       q is positive value (q > 0)\n";
	print "              q          fr0\n";
	print "  ----( + )---|>---(+)----|>---(+)---[ ]--+--|>----(+)-----+---+\n";
	print "         \\           \\           \\        |  fr1     \\     |   |\n";
	print "          \\           \\           +-------+           \\   [ ]  |\n";
	print "           \\           \\                  |            \\   |   |\n";
	print "            +-----<|----------------------+             +--+   |\n";
	print "                 -1.0    \\                                     |\n";
	print "                          +---------------------<|-------------+\n";
	print "                                               -1.0\n";
}

if ($#ARGV <= 0) {
		Usage();

		exit 1;
	}


my %argument_hash = ParseArgument(\@ARGV);

my $option_arg;
foreach my $key (keys %{ $argument_hash{ "option" } }) {
	my $val = $argument_hash{ "option" }->{ $key };
	$option_arg .= " $key=$val";
}


# Transfer Function as PKG
#                          fr0 * q * (a0 - (a0 - a1)*Z^-1 - a1*Z^-2)
#  H(Z) = 1 + g * --------------------------------------------------------
#                 1 - (-fr0 * q - fr0 * fr1 + 2)*Z^-1 + (1 - fr0 * q)*Z^-2


	if ($#{ $argument_hash{ "argument" } } != 3) {
		Usage();

		exit 1;
	}
	#as HPF
	{
		my ($fr0, $q, $fr1, $Fs) = @{ $argument_hash{ "argument" } };

		#ignore a1
		my $ma0 = $fr0 * $q * 0.5;
		my $ma1 = 0;
		my $ma2 = $fr0 * $q * -0.5;
		my $mb1 = -$fr0 * $q - $fr0 * $fr1 + 2;
		my $mb2 = -(1 - $fr0 * $q);

#		print "as HPF...\n";
#		print "a0 as EA --> $ma0\n";
#		print "a1 as EA --> $ma1\n";
#		print "a2 as EA --> $ma2\n";
#		print "b1 as EA --> $mb1\n";
#		print "b2 as EA --> $mb2\n";
#		print "\n";
		my $command = $FindBin::RealBin . "/ceqEAanalyze $ma0 $ma1 $ma2 $mb1 $mb2 $Fs $option_arg";
		print "$command\n";
		system ($command);
	}
