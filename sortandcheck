#! /usr/bin/perl

use strict;
use FindBin;
use POSIX;

require $FindBin::Bin . "/wav_util.pm";


my @data;



sub usage {
	my $cmd = `basename $0`;
	chomp $cmd;
	print "usage: $cmd [inFile.(dat|bin|raw)] [FORMAT_ID=1] [FS=44100] [NUM_OF_CH=1] [BIT_LENGTH=16] [ENDIAN=LITTLE] outWavFile\n";
	exit 1;
}


while (my $str = <>) {
	if ($str =~ /^(.+)\s+(.*)$/) {
		my ($index, $val) = ($1, $2);
		my $indexval = eval($index);
		if (defined($data[$indexval])) {
			printf("data %s is already defined (%s)\n", $data[$indexval]->[0], $data[$indexval]->[1]);
		}
		$data[$indexval] = [$index, $val];
	}
}


#
# raw list
#
#printf("=== raw list ===\n");

#for (my $i = 0; $i < $#data; $i++) {
#	my $isDefined = defined($data[$i]);
#	if ($isDefined) {
#		printf("%s\t%s\n", $data[$i]->[0], $data[$i]->[1]);
#	}
#}


#
# list defined
#
printf("=== defined values ===\n");

my $prevIsDefined = -1;
my $prevprevIsDefined = -1;
for (my $i = 0; $i < $#data; $i++) {
	my $isDefined = (defined($data[$i])) ? 1 : 0;
	if ($prevIsDefined != $isDefined) {
		if ($isDefined) {	# start
			printf("%s\t%s\n", $data[$i]->[0], $data[$i]->[1]);
		} else {		# end
			if ($i > 0) {
				if ($i == 1) {
					printf("%s\t%s\n", $data[$i-1]->[0], $data[$i-1]->[1]);
				} else {
					if ($prevIsDefined == $prevprevIsDefined) {
						printf("  :\n");
						printf("%s\t%s\n", $data[$i-1]->[0], $data[$i-1]->[1]);
					}
				}
			}
		}
	}
	$prevprevIsDefined = $prevIsDefined;
	$prevIsDefined = $isDefined;
}
{
	my $isDefined = (defined($data[-1])) ? 1 : 0;
	if ($isDefined) {
		if (($prevIsDefined == $isDefined) && ($prevIsDefined == $prevprevIsDefined)) {
			printf("  :\n");
		}
		printf("%s\t%s\n", $data[-1]->[0], $data[-1]->[1]);
	}
}


#
# list undefined
#
printf("=== undefined values ===\n");

my $prevIsDefined = -1;
my $prevprevIsDefined = -1;
for (my $i = 0; $i < $#data; $i++) {
	my $isDefined = (defined($data[$i])) ? 1 : 0;
	if ($prevIsDefined != $isDefined) {
		if (!$isDefined) {
			printf("%d(0x%x)\n", $i, $i);
		} else {
			if ($i > 0) {
				if ($i >= 2) {
					if ($prevIsDefined == $prevprevIsDefined) {
						printf("  :\n");
						printf("%d(0x%x)\n", $i-1, $i-1);
					}
				} else {
					printf("%d(0x%x)\n", $i-1, $i-1);
				}
			}
		}
	}
	$prevprevIsDefined = $prevIsDefined;
	$prevIsDefined = $isDefined;
}
{
	my $isDefined = (defined($data[-1])) ? 1 : 0;
	if (!$isDefined) {
		if (($prevIsDefined == $isDefined) && ($prevIsDefined == $prevprevIsDefined)) {
			printf("  :\n");
		}
		printf("%d(0x%x)\n", $#data, $#data);
	}
}
