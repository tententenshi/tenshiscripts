#! /usr/bin/env perl

use strict;
use FindBin;

require $FindBin::RealBin . "/wav_util.pm";


sub usage {
	my $cmd = `basename $0`;
	chomp $cmd;
	print "-- wav to dat converter --\n";
	print "usage: $cmd inFile(*.wav) outFile(*.dat)\n";
	print "\n";
}

if ($#ARGV != 1) {
	usage();
	exit 1;
}



my @FIR_Coef = (
        25216   / 16384.0,
        -10473  / 16384.0,
        -5984   / 16384.0,
        1043    / 16384.0,
        6717    / 16384.0,
        8120    / 16384.0,
        -1544   / 16384.0,
        -1097   / 16384.0,
        462     / 16384.0,
        1824    / 16384.0,
        199     / 16384.0,
        -246    / 16384.0,
        -1522   / 16384.0,
        -1841   / 16384.0,
        1285    / 16384.0,
        116     / 16384.0,
        451     / 16384.0,
        -1978   / 16384.0,
        -752    / 16384.0,
        113     / 16384.0,
        97      / 16384.0,
        748     / 16384.0,
        -201    / 16384.0,
        900     / 16384.0,
        -336    / 16384.0,
        -109    / 16384.0,
        650     / 16384.0,
        1779    / 16384.0,
        1065    / 16384.0,
        -376    / 16384.0,
        -825    / 16384.0,
        97      / 16384.0,
        1135    / 16384.0,
        260     / 16384.0,
        55      / 16384.0,
        -760    / 16384.0,
        -517    / 16384.0,
        -419    / 16384.0,
        -55     / 16384.0,
        -235    / 16384.0,
        -633    / 16384.0,
        -566    / 16384.0,
        -195    / 16384.0,
        155     / 16384.0,
        -313    / 16384.0,
        -455    / 16384.0,
        -488    / 16384.0,
        134     / 16384.0,
        80      / 16384.0,
        185     / 16384.0,
        -129    / 16384.0,
        -329    / 16384.0,
        -405    / 16384.0,
        -125    / 16384.0,
        99      / 16384.0,
        -272    / 16384.0,
        -304    / 16384.0,
        -519    / 16384.0,
        -214    / 16384.0,
        -423    / 16384.0,
        -397    / 16384.0,
        -653    / 16384.0,
        -396    / 16384.0,
        -232    / 16384.0,
        -426    / 16384.0,
        -392    / 16384.0,
        -453    / 16384.0,
        -172    / 16384.0,
        -339    / 16384.0,
        -140    / 16384.0,
        -174    / 16384.0,
        -93     / 16384.0,
        -118    / 16384.0,
        9       / 16384.0,
        -50     / 16384.0,
        40      / 16384.0,
        93      / 16384.0,
        -83     / 16384.0,
        7       / 16384.0,
        -139    / 16384.0,
        -43     / 16384.0,
        -232    / 16384.0,
        -47     / 16384.0,
        -228    / 16384.0,
        -196    / 16384.0,
        -215    / 16384.0,
        -196    / 16384.0,
        -218    / 16384.0,
        -343    / 16384.0,
        -218    / 16384.0,
        -330    / 16384.0,
        -33     / 16384.0,
        -251    / 16384.0,
        -159    / 16384.0,
        -251    / 16384.0,
        -180    / 16384.0,
        -146    / 16384.0,
        -159    / 16384.0,
        -50     / 16384.0,
        -191    / 16384.0,
        -119    / 16384.0,
        -152    / 16384.0,
        29      / 16384.0,
        -88     / 16384.0,
        12      / 16384.0,
        -159    / 16384.0,
        -48     / 16384.0,
        -3      / 16384.0,
        -45     / 16384.0,
        -14     / 16384.0,
        -89     / 16384.0,
        71      / 16384.0,
        -88     / 16384.0,
        37      / 16384.0,
        -45     / 16384.0,
        9       / 16384.0,
        -70     / 16384.0,
        -27     / 16384.0,
        -36     / 16384.0,
        -20     / 16384.0,
        11      / 16384.0,
        -150    / 16384.0,
        -61     / 16384.0,
        -181    / 16384.0,
        -68     / 16384.0,
        -123    / 16384.0,
        -97     / 16384.0,
        -170    / 16384.0,
        -172    / 16384.0,
        -146    / 16384.0,
        -142    / 16384.0,
        -139    / 16384.0,
        -150    / 16384.0,
        -110    / 16384.0,
        -176    / 16384.0,
        -53     / 16384.0,
        -169    / 16384.0,
        -60     / 16384.0,
        -123    / 16384.0,
        -98     / 16384.0,
        -66     / 16384.0,
        -81     / 16384.0,
        -34     / 16384.0,
        -103    / 16384.0,
        -58     / 16384.0,
        -118    / 16384.0,
        -9      / 16384.0,
        -48     / 16384.0,
        7       / 16384.0,
        -132    / 16384.0,
        -59     / 16384.0,
        -30     / 16384.0,
        -84     / 16384.0,
        -1      / 16384.0,
        -70     / 16384.0,
        6       / 16384.0,
        -150    / 16384.0,
        -12     / 16384.0,
        -78     / 16384.0,
        -45     / 16384.0,
        -85     / 16384.0,
        -77     / 16384.0,
        -69     / 16384.0,
        -74     / 16384.0,
        -73     / 16384.0,
        -132    / 16384.0,
        -97     / 16384.0,
        -128    / 16384.0,
        -55     / 16384.0,
        -139    / 16384.0,
        -80     / 16384.0,
        -170    / 16384.0,
        -135    / 16384.0,
        -110    / 16384.0,
        -116    / 16384.0,
        -74     / 16384.0,
        -118    / 16384.0,
        -82     / 16384.0,
        -155    / 16384.0,
        -53     / 16384.0,
        -103    / 16384.0,
        0       / 16384.0,
        -89     / 16384.0,
        -18     / 16384.0,
        -62     / 16384.0,
        -49     / 16384.0,
        13      / 16384.0,
        -53     / 16384.0,
        -26     / 16384.0,
        -23     / 16384.0,
        -28     / 16384.0,
        5       / 16384.0,
        -58     / 16384.0,
        -68     / 16384.0,
        -48     / 16384.0,
        -16     / 16384.0,
        -22     / 16384.0,
        -97     / 16384.0,
        -83     / 16384.0,
        -98     / 16384.0,
        -43     / 16384.0,
        -23     / 16384.0,
        -134    / 16384.0,
        -1      / 16384.0,
        -138    / 16384.0,
        11      / 16384.0,
        -68     / 16384.0,
        -47     / 16384.0,
        -25     / 16384.0,
        -57     / 16384.0,
        35      / 16384.0,
        -66     / 16384.0,
        32      / 16384.0,
        -82     / 16384.0,
        44      / 16384.0,
        -52     / 16384.0,
        8       / 16384.0,
        -24     / 16384.0,
        -29     / 16384.0,
        13      / 16384.0,
        -84     / 16384.0,
        32      / 16384.0,
        -86     / 16384.0,
        34      / 16384.0,
        -77     / 16384.0,
        -9      / 16384.0,
        -45     / 16384.0,
        -30     / 16384.0,
        -6      / 16384.0,
        -56     / 16384.0,
        11      / 16384.0,
        -75     / 16384.0,
        26      / 16384.0,
        -62     / 16384.0,
        18      / 16384.0,
        -55     / 16384.0,
        -12     / 16384.0,
        -23     / 16384.0,
        -33     / 16384.0,
        -3      / 16384.0,
        -62     / 16384.0,
        2       / 16384.0,
        -71     / 16384.0,
        2       / 16384.0,
        -66     / 16384.0,
        -10     / 16384.0,
        -56     / 16384.0,
        -32     / 16384.0,
        -34     / 16384.0,
        -42     / 16384.0,
        -11     / 16384.0,
        -56     / 16384.0,
        1       / 16384.0,
        -56     / 16384.0,
        10      / 16384.0,
        -43     / 16384.0,
		);

my @RingBuf;
my $RingIndex;

sub Process {
	my ($data, $ch) = @_;

	$RingBuf[$ch][$RingIndex] = $data;
	my $sum = 0;

	for (my $i = 256; $i > 0; $i--) {
	    $sum += $RingBuf[$ch][($RingIndex + $i) & 0xff] * $FIR_Coef[$i];
	}

	$RingIndex = ($RingIndex + 1) & 0xff;

	$sum = ($sum > 1.0) ? 1.0 : (($sum < -1.0) ? -1.0 : $sum);
	return $sum;
}

sub max {
	my ($a, $b) = @_;
	return ($a > $b) ? $a : $b;
}

#main

{
	my $infile = shift;
	my $outfile = shift;

	my $fhIn, my $fhOut;
	open($fhIn, "$infile") or die "cannot open $infile!\n";
	open($fhOut, "> $outfile") or die "cannot open $outfile!\n";
	binmode $fhIn;
	binmode $fhOut;

	my %infoHash;
	my @preChunkBuf, my @postChunkBuf;
	my $dataSize = wav_util::ReadWavHeader($fhIn, \%infoHash, \@preChunkBuf, \@postChunkBuf);
	wav_util::WriteWavHeader($fhOut, \@preChunkBuf);

	my $remain = $dataSize;
	while($remain > 0) {
		my @dataArray = wav_util::ReadWavData($fhIn, \%infoHash);

		for (my $i = 0; $i <= $#dataArray; $i++) {
			$dataArray[$i] = Process($dataArray[$i], $i);
		}

		wav_util::WriteWavData($fhOut, \%infoHash, \@dataArray);

		$remain -= $infoHash{ "BLOCK_SIZE" };
	}

	wav_util::WriteWavTrailer($fhOut, \@postChunkBuf);

	close ($fhIn);
	close ($fhOut);

	wav_util::MaintainWavHeader($outfile, \%infoHash, $dataSize);
}

