#! /usr/bin/env perl

use strict;

sub usage {
	my $cmd = `basename $0`;
	chomp $cmd;
	print "-- gnuplot setting file to png --\n";
	print "usage: $cmd [--size 1280, 960] [inFile(*.gnu)] [-i inDataFilename.dat] ([-i inDataFilename.dat]...) [-o outFilename.png]\n";
	print "\n";
}

if ($#ARGV < 0) {
	usage();
	exit 1;
}

my $inGnuFile = "";
my @inDataFileList = ();
my $outPngFile = "";
my $mode = "";
my $size_set_str = "size 640, 480";

while (my $str = shift) {
	if ($str =~ /^-o(.*)/) {
		if ($1 ne "") {
			$outPngFile = $1;
		} else {
			$outPngFile = shift;
		}
	} elsif ($str =~ /^-i(.*)/) {
		my $inDataFile;
		if ($1 ne "") {
			$inDataFile = $1;
		} else {
			$inDataFile = shift;
		}
		push @inDataFileList, $inDataFile;
	} elsif ($str =~ /^--(.+)/) {
		my $option = $1;
		if ($option =~ /size(.*)/) {
			my $x; my $y;
			my $tmpStr;
			if ($1 =~ /\d/) {
				$tmpStr = $1;
			} else {
				$tmpStr = shift;
			}
			if ($tmpStr =~ /(\d+)[, ]+(\d+)/) {
				($x, $y) = (eval($1), eval($2));
			} elsif ($tmpStr =~ /(\d+)/) {
				$x = eval($1);
				$y = eval(shift);
			} else {
			}
			$size_set_str = "size $x, $y";
		}
	} else {
		$inGnuFile = $str;
	}
}

if ($outPngFile eq "") {
	if ($inGnuFile ne "") {
		$outPngFile = $inGnuFile;
		$outPngFile =~ s/\.(\w+)$/\.png/;
	} else {
		$outPngFile = "output.png";
	}
}

my $tmpFile = $inGnuFile . "gnuplot2png_tmp";


open(OUT, "> $tmpFile") or die "cannot open $tmpFile!\n";

print "opened $tmpFile\n";

my $isRawData = ($inGnuFile eq "") ? 1 : 0;
if ($isRawData) {
	print "input file is raw data\n";
} else {
	print "input file is gnuplot script\n";
}

print OUT "set terminal pngcairo enhanced $size_set_str\n";
print OUT "set output \"$outPngFile\"\n";
print OUT "set style data lines\n";
print OUT "set grid\n";

if ($isRawData) {
	my $tmpinfile = shift @inDataFileList;
	print OUT "plot \"$tmpinfile\"";
	while (my $tmpinfile = shift @inDataFileList) {
		print OUT ", \"$tmpinfile\"";
	}
	print "\n";
} else {
	open(IN, "$inGnuFile") or die "cannot open $inGnuFile!\n";
	my $firstInDataFile = shift @inDataFileList;	# with Gnuplot Script, deal only first data
	my $secondInDataFile = shift @inDataFileList;	# with Gnuplot Script, deal only second data
	while (my $str = <IN>) {
		$str =~ s/gnuplotDataFileName/$firstInDataFile/g;
		$str =~ s/gnuplotDataFile2Name/$secondInDataFile/g;
		if ($str =~ /set\s+terminal/) {
			next;
		}
		if ($str =~ /set\s+output/) {
			next;
		}
		if ($str =~ /set\s+size\s+(.+)/) {
			if ($1 =~ /(ratio|square)/) {
			} else {
				next;
			}
		}
		print OUT $str;
	}
}

system '/usr/bin/gnuplot', "$tmpFile";

unlink $tmpFile;
