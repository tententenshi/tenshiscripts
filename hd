#! /usr/bin/env perl

use strict;

sub Usage {
	print "convert hex value to decimal/float value\n";
	print "Usage: $0 -[dfx] file1\n";
	print "         hex --> dec converter\n";
	print "         options-> d: hex --> decimal\n";
	print "                   f: hex         --> float\n";
	print "                   x: XP coef hex --> float\n";
	exit 1;
}

sub my_hex_float {
	my ($str)=@_;
	if ($str =~ /([+-]?0[xX][0-9a-fA-F]+)(\.[0-9a-fA-F]*)?[pP]([+-]?\d+)/) {
		my ($int_val, $frac_val, $shift) = ($1, $2, $3);
		$frac_val =~ s/\.//;
		my $frac_digit = length($frac_val);
		$shift -= $frac_digit * 4;
		my $shift_val = 2**$shift;
		my $val = eval($int_val . $frac_val) * $shift_val;
		return $val;
	} else {
		return 0;
	}
}

sub hex2float {
	my($hexVal, $hexByte, $option) = @_;
	my $retVal;

	if ($option eq "f") {
		if ($hexByte <= 4) {		# 2Byte
			if ($hexVal < 0x80) { $retVal = $hexVal / 128.0; }
			else { $retVal = ($hexVal - 0x100) / 128.0; }
		} elsif ($hexByte <= 6) {	# 4Byte
			if ($hexVal < 0x8000) { $retVal = $hexVal / 32768.0; }
			else { $retVal = ($hexVal - 0x10000) / 32768.0; }
		} elsif ($hexByte <= 10) {	# 8Byte
#			$retVal = $hexVal / 8388608.0;
			if ($hexVal < 0x80000000) { $retVal = $hexVal / 8388608.0; }
#			else { $retVal = -1 * (($hexVal & 0x7fffffff) + 0x80000000) / 8388608.0; }
			else { $retVal = $hexVal / 8388608.0 - 0x200; }
		}
	} else {
		if ($hexByte > 6) { $retVal = "@@@@@@@"; }
		else {
			my $shift = ($hexVal & 0xc000) >> 14;
			if ($shift == 3) { $shift = 4; }
			my $value = ($hexVal & 0x3fff) <<2;
			if ($value < 0x8000) { $retVal = $value; }
			else { $retVal = ($value - 0x10000); }
#			printf "now value is 0x%06x --> 0x%06x, shift = %2d\n", $value, $retVal, $shift;
			$retVal = ($retVal * 2**$shift) / 32768.0;
		}
	}
	return $retVal;
}


unless (defined($ARGV[0])) {
	Usage();
}

my $option = "d";
my $fileName;
while (my $arg = shift) {
	if ($arg =~ /^-([dfx])/) {
		$option = $1;
	} else {
		$fileName = $arg;
	}
}

my @orgData;
if (defined($fileName)) {
	open (ORGFILE, $fileName) or die "Cannot open $fileName !\n";
#	print "come here open $arg\n";
	while (<ORGFILE>) {
		push(@orgData, $_);
#		print "come here open". $_;
	}
} else {
	while (<STDIN>) {
		push (@orgData, $_);
	}
}

foreach my $str (@orgData) {
	if ($str =~ /0x[0-9a-fA-F]+/) {
		my $converted_str;

		while ($str =~ /(.*?)([+-]?0[xX][0-9a-fA-F]+)(\.[0-9a-fA-F]*)?([pP][+-]?\d+)(.*)/s) {
			my ($pre, $hex_float_val, $post) = ($1, $2 . $3 . $4, $5);

			$converted_str .= $pre;
			$str = $post;
			$converted_str .= my_hex_float($hex_float_val);
		}
		$converted_str .= $str;

		$str = $converted_str;
		$converted_str = "";

		while ($str =~ /(.*?)(0x[0-9a-fA-F]+)(.*)/s) {
			my ($pre, $hexstr, $post) = ($1, $2, $3);
			$converted_str .= $pre;
			$str = $post;
			my $hexVal = eval($hexstr);
			my $hexByte = length($hexstr);
			my $result;
			if ($option eq "d") { $result = $hexVal; }
			else { $result = hex2float($hexVal, $hexByte, $option); }
			$converted_str .= $result;
		}
		$converted_str .= $str;
		print $converted_str;
	} else {
		print $str;
	}
}
