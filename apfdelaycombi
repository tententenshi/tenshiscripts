#! /usr/bin/env perl

use strict;


sub isNotPrime {
	my ($n) = @_;

	if ($n == 1) { return 1; }
	if ($n == 2) { return 0; }

	my $mod6 = $n % 6;
	if (($mod6 != 1) && ($mod6 != 5)) {
		if (($n & 1) == 0) {
			return 2;
		} else {
			return 3;
		}
	}

	for (my $i = 2; $i < sqrt($n); ++$i) {
		if ($n % $i == 0) {
			return $i;
		}
	}
	return 0;
}


if ($#ARGV != 1) {
	my $cmd = `basename $0`;
	chomp $cmd;
	print "usage: $cmd value denominator\n";
	exit 1;
}

my $val = eval(shift);
my $denom = eval(shift);

print "original val($val), denom($denom) --> ";

while ($val >= 7) {
	while (isNotPrime($val)) { $val--; }

	print "$val ";

	if ($denom <= 1) {
		last;
	}

	$val = int($val / $denom);
}

print "\n";

